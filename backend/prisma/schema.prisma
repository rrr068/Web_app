// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  email             String   @unique @db.VarChar(255)
  password          String   @db.VarChar(255)
  name              String?  @db.VarChar(255)
  profileImage      String?
  bio               String?
  skills            String?
  portfolio         Portfolio?
  posts             Post[]
  likes             Like[]
  chatSpace         Chat[]
  messages          Message[]
}

model Post {
  id         Int        @id @default(autoincrement())
  title      String     @db.VarChar(255)
  content    String?
  createdAt  DateTime   @default(now()) @db.Timestamp(6)
  updataAt   DateTime   @default(now()) @db.Timestamp(6)
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  likes      Like[]
  categories Category[]
}

model Category {
  id    Int    @id @default(autoincrement())
  name  String @unique
  posts Post[]
}

model Portfolio {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int      @unique
  title     String
  content   String
  createdAt DateTime @default(now())
}

model Message {
  id         Int       @id @default(autoincrement())
  text       String?
  user       User      @relation(fields: [userId], references: [id])
  userId     Int
  chat       Chat      @relation(fields: [chatId], references: [id])
  chatId     Int
  createdAt  DateTime  @default(now()) @db.Timestamp(6)
  updatedAt   DateTime @default(now()) @db.Timestamp(6)
}

model Chat {
  id           Int       @id @default(autoincrement())
  messages     Message[]
  participants User[]    @relation
}

model Like {
  id     Int  @id @default(autoincrement())
  post   Post @relation(fields: [postId], references: [id])
  postId Int  
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

